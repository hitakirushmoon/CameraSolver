package pid;

import java.awt.Graphics2D;

public class Controller implements Renderable {
	Coordinates target, current;
	Coordinates P, I, D;
	Coordinates culmativeError = new Coordinates(0, 0);
	Coordinates lastError = new Coordinates(0, 0);
	double kP, kI, kD, maxSpeed;
	Path path = new Path();

	public Controller(double kP, double kI, double kD, double maxSpeed) {
		this.kP = kP;
		this.kI = kI;
		this.kD = kD;
		this.maxSpeed = maxSpeed;
	}

	public void setTarget(Coordinates target) {
		this.target = target;
	}

	public void setCurrent(Coordinates current) {
		this.current = current;
	}

	public void update() {
		if (target != null && current != null) {
			Coordinates e = current.getVectorTo(target);
			culmativeError.add(e);
			P = e.clone().scale(kP);
			I = culmativeError.clone().scale(-kI);
			D = e.getVectorTo(lastError);
			lastError = e;
			Coordinates direction = P.clone().add(I).add(D);
			if (direction.size() > maxSpeed) {
				direction.normalize().scale(maxSpeed);
			}
			current.add(direction);
		}
	}

	@Override
	public void render(Graphics2D g) {
		if (target != null && current != null) {
			target.render(g);
			current.render(g);
			new Segment(target, current).render(g);
		}
	}

}
