package kata;

public class Dih4 {
	public static void main(String[] args) {
		for (int i = 0; i < 8; i++) {
			for (int j = 0; j < 8; j++) {
				System.out.println(a[i] + " + " + a[j] + " -> " + a[i].then(a[j]));
			}
		}
	}

	static boolean assert_Dih4_equal(Dih4 a, Dih4 b) {
		return a.equals(b);
	}

	static final Dih4 IDENTITY = new Dih4(0);
	static final Dih4 ROTATE_90_ANTICLOCKWISE = new Dih4(1);
	static final Dih4 ROTATE_180 = new Dih4(2);
	static final Dih4 ROTATE_90_CLOCKWISE = new Dih4(3);
	static final Dih4 REFLECT_VERTICAL = new Dih4(4);
	static final Dih4 REFLECT_FORWARD_DIAGONAL = new Dih4(5);
	static final Dih4 REFLECT_HORIZONTAL = new Dih4(6);
	static final Dih4 REFLECT_REVERSE_DIAGONAL = new Dih4(7);
	static final Dih4[] a = { IDENTITY, ROTATE_90_ANTICLOCKWISE, ROTATE_180, ROTATE_90_CLOCKWISE, REFLECT_VERTICAL,
			REFLECT_FORWARD_DIAGONAL, REFLECT_HORIZONTAL, REFLECT_REVERSE_DIAGONAL };
	int index;

	Dih4(int index) {
		this.index = index;
	}

	public Dih4 then(Dih4 transform) {
		int layer1 = index / 4;
		int layer2 = transform.index / 4;
		int pos1 = index % 4;
		int pos2 = transform.index % 4;
		return a[((layer1 + layer2) % 2) * 4 + (pos1 + pos2) % 4];
	}

	public Dih4 inv() {
		if (index < 4 && index > 0) {
			return a[4 - index];
		}
		return this;
	}

	public boolean is_rotation() {
		return index / 4 == 0;
	}

	public boolean is_reflection() {
		return index / 4 == 1;
	}

	public String toString() {
		switch (index) {
		case 0:
			return "IDENTITY";
		case 1:
			return "ROTATE_90_ANTICLOCKWISE";
		case 2:
			return "ROTATE_180";
		case 3:
			return "ROTATE_90_CLOCKWISE";
		case 4:
			return "REFLECT_VERTICAL";
		case 5:
			return "REFLECT_FORWARD_DIAGONAL";
		case 6:
			return "REFLECT_HORIZONTAL";
		case 7:
			return "REFLECT_REVERSE_DIAGONAL";
		default:
			throw new IllegalArgumentException();
		}
	}
}