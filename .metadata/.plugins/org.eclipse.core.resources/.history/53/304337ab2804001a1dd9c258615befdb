package kata;

import java.math.BigInteger;

public class Faberge {
	public static void main(String[] args) {
		System.out.println(height(BigInteger.valueOf(271), BigInteger.valueOf(550)));
	}

	private static BigInteger mo = BigInteger.valueOf(998244353);

	public static BigInteger height(BigInteger m, BigInteger n) {
		BigInteger res = BigInteger.ZERO;
		for (BigInteger k = BigInteger.ONE; k.compareTo(m) <= 0; k = k.add(BigInteger.ONE)) {
			res = res.add(lucasChoose(n, k));
		}
		return res.mod(mo);
	}

//579701132
	public static BigInteger lucasChoose(BigInteger n, BigInteger m) {
		BigInteger ret = BigInteger.ZERO;
		while (m.compareTo(BigInteger.ZERO) > 0) {
			BigInteger nk = n.mod(mo);
			BigInteger mk = m.mod(mo);
			ret.add(choose(nk, mk));
			n = n.divide(mo);
			m = m.divide(mo);
		}
		return ret;
	}

	public static BigInteger choose(BigInteger n, BigInteger m) {
		if (m.compareTo(n) > 0) {
			return BigInteger.ZERO;
		}
		BigInteger ret = BigInteger.ONE;
		for (BigInteger k = BigInteger.ONE; k.compareTo(m) <= 0; k = k.add(BigInteger.ONE)) {
			ret = ret.multiply(n.subtract(k).add(BigInteger.ONE)).divide(k);
		}
		return ret;
	}
}