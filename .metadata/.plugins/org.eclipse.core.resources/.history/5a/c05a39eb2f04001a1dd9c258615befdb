package kata;

import java.math.BigInteger;

public class Faberge {
	public static void main(String[] args) {
//		System.out.println(degree(BigInteger.valueOf(2),BigInteger.valueOf(3)));
		System.out.println(height(BigInteger.valueOf(40000), BigInteger.valueOf(80000)));
	}

	private static BigInteger p = BigInteger.valueOf(998244353);

	public static BigInteger height(BigInteger n, BigInteger m) {
		BigInteger h = BigInteger.ZERO;
		BigInteger a = BigInteger.ONE;
//for (int e = 1; e <= n.intValue(); h = h.add(a), e++)
		for (BigInteger e = BigInteger.ONE; e.compareTo(n) <= 0; h = h.add(a), e = e.add(BigInteger.ONE)) {
			a = a.multiply(m.add(BigInteger.ONE.subtract(e))).divide(e);
		}
		return h.mod(p);
	}

	public static BigInteger degree(BigInteger a, BigInteger k) {
		BigInteger res = BigInteger.ONE;
		BigInteger cur = a;

		while (k.compareTo(BigInteger.ZERO) > 0) {
			if (k.mod(BigInteger.TWO).compareTo(BigInteger.ZERO) == 1) {
				res = res.multiply(cur).mod(p);
			}
			k = k.divide(BigInteger.TWO);
			cur = cur.multiply(cur).mod(p);
		}
		return res;
	}
}