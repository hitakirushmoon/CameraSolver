package kata;

import java.util.ArrayList;
import java.util.List;

public class CakeCutter {
	String cake;

	public CakeCutter(String cake) {
		this.cake = cake;
	}

	List<Integer> cakeSizes = new ArrayList<Integer>();
	String[] slices;
	int[][] position;
	int sizeOfRects;

	public List<String> cut() {
		// Coding and coding... again!
		slices = cake.split("\n");
		int m = slices.length;
		int n = slices[0].length();
		int count = cake.length() - cake.replace("o", "").length();
		position = new int[count][2];
		
		if (m * n % count != 0) {
			return null;
		}

		sizeOfRects = m * n / count;
		for (int i = 1; i <= Math.sqrt(sizeOfRects); i++) {
			if (sizeOfRects % i == 0) {
				cakeSizes.add(i);
				if (i * i != sizeOfRects) {
					cakeSizes.add(sizeOfRects / i);
				}
			}
		}
		int raisin = 0;
		for (int x = 0; x < m && raisin < count; x++) {
			for (int y = 0; y < n && raisin < count; y++) {
				if (slices[x].charAt(y) == 'o') {
					position[raisin][0] = x;
					position[raisin][1] = y;
					raisin++;
				}
			}
		}
		return null;
	}

	public int getNextCorner() {

	}
}